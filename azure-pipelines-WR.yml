# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https:\\docs.microsoft.com\azure\devops\pipelines\languages\javascript

parameters:
  - name: scenario
    displayName: Choose scenario you want to run with.
    type: string
    default: scenario001.js
    values:
      - scenario001.js
      - scenario002.js
      - scenario003.js

  - name: browser
    displayName: Choose browser you want to run with.
    type: string
    default: chrome
    values:
      - chrome
      - firefox
      - edge

trigger:
  - none
pr:
  - none

schedules:
  - cron: "0 8 * * *"
    displayName: run schedule for 17:00(8)
    branches:
      include:
        - release_step5_WR
    always: true

variables:
  DIR: $(Build.SourcesDirectory)\bcd-e2e-tests

pool:
  vmImage: windows-2019

stages:
  - stage: install
    jobs:
      - job: e2eTestJob
        steps:
          - script: |
              dir
            workingDirectory: $(DIR)
            displayName: echo1
          - script: |
              dir
            displayName: echo2

          # - task: Cache@2
          #   inputs:
          #     key: $(DIR)\package-lock.json
          #     path: $(DIR)\node_modules
          #   displayName: Cache npm

          # - task: Cache@2
          #   inputs:
          #     key: $(DIR)\package-lock.json
          #     path: C:\Users\VssAdministrator\AppData\Local\ms-playwright
          #   displayName: Cache browser

          # - script: |
          #     npm i
          #   workingDirectory: $(DIR)
          #   displayName: install

  - stage: test
    jobs:
      - job: chrome
        steps:
          - script: |
              dir
            workingDirectory: $(DIR)
            displayName: echo3
          - script: |
              dir
            displayName: echo4

          # - script: |
          #     npm run chrome -- spec\scenario003.js
          #     # npm run ${{parameters.browser}} -- spec\${{parameters.scenario}}
          #   workingDirectory: $(DIR)
          #   displayName: test

          # - script: |
          #     npm run e2e-report
          #   workingDirectory: $(DIR)
          #   displayName: report
          #   condition: succeededOrFailed()

          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     targetPath: $(DIR)\build\autotest-report
          #     artifactName: report1
          #   displayName: artifact
          #   condition: succeededOrFailed()

      - job: firefox
        steps:
          - script: |
              dir
            workingDirectory: $(DIR)
            displayName: echo5
          - script: |
              dir
            displayName: echo6

          # - script: |
          #     npm run chrome -- spec\citest.js
          #     # npm run ${{parameters.browser}} -- spec\${{parameters.scenario}}
          #   workingDirectory: $(DIR)
          #   displayName: test

          # - script: |
          #     npm run e2e-report
          #   workingDirectory: $(DIR)
          #   displayName: report
          #   condition: succeededOrFailed()

          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     targetPath: $(DIR)\build\autotest-report
          #     artifactName: report2
          #   displayName: artifact
          #   condition: succeededOrFailed()
